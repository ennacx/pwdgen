name: Password generator

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

concurrency:
  group: "pages"
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Setup module
      run: |
        npm install -g html-minifier-terser terser clean-css-cli

    - name: Make directory
      run: |
        mkdir -p ./dist

    - name: Generate service worker with git hash
      run: |
        GIT_HASH=$(git rev-parse --short HEAD)
        sed "s/{{GIT_HASH}}/${GIT_HASH}/g" service-worker.template.js > service-worker.js

    - name: HTML minifier
      run: |
        html-minifier-terser --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-style-link-type-attributes --use-short-doctype --minify-js true --minify-css true ./index.html -o ./dist/index.html

    - name: JS minifier
      run: |
        terser ./pwdgen.js -c -m -o ./dist/pwdgen.js
        terser ./index.js -c -m -o ./dist/index.js
        terser ./service-worker.js -c -m -o ./dist/service-worker.js

    - name: CSS minifier
      run: |
        cleancss -o ./dist/pwdgen.css ./pwdgen.css

    - name: Resources cory
      run: |
        cp ./favicon.ico ./dist/

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
